// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rtb.proto

#include "rtb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_rtb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rtb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReplyStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rtb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RequestCredentials;
}  // namespace protobuf_rtb_2eproto
namespace sita {
namespace rtb {
class RequestCredentialsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestCredentials>
      _instance;
} _RequestCredentials_default_instance_;
class ReplyStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReplyStatus>
      _instance;
} _ReplyStatus_default_instance_;
class HelpRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HelpRequest>
      _instance;
} _HelpRequest_default_instance_;
class HelpReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HelpReply>
      _instance;
} _HelpReply_default_instance_;
class AddRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddRequest>
      _instance;
} _AddRequest_default_instance_;
class AddReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddReply>
      _instance;
} _AddReply_default_instance_;
class DeleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteRequest>
      _instance;
} _DeleteRequest_default_instance_;
class DeleteReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteReply>
      _instance;
} _DeleteReply_default_instance_;
class ClearRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClearRequest>
      _instance;
} _ClearRequest_default_instance_;
class ClearReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClearReply>
      _instance;
} _ClearReply_default_instance_;
class DisplayRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisplayRequest>
      _instance;
} _DisplayRequest_default_instance_;
class DisplayReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisplayReply>
      _instance;
} _DisplayReply_default_instance_;
}  // namespace rtb
}  // namespace sita
namespace protobuf_rtb_2eproto {
static void InitDefaultsRequestCredentials() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sita::rtb::_RequestCredentials_default_instance_;
    new (ptr) ::sita::rtb::RequestCredentials();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sita::rtb::RequestCredentials::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RequestCredentials =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequestCredentials}, {}};

static void InitDefaultsReplyStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sita::rtb::_ReplyStatus_default_instance_;
    new (ptr) ::sita::rtb::ReplyStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sita::rtb::ReplyStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReplyStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReplyStatus}, {}};

static void InitDefaultsHelpRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sita::rtb::_HelpRequest_default_instance_;
    new (ptr) ::sita::rtb::HelpRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sita::rtb::HelpRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HelpRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHelpRequest}, {
      &protobuf_rtb_2eproto::scc_info_RequestCredentials.base,}};

static void InitDefaultsHelpReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sita::rtb::_HelpReply_default_instance_;
    new (ptr) ::sita::rtb::HelpReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sita::rtb::HelpReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HelpReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHelpReply}, {
      &protobuf_rtb_2eproto::scc_info_ReplyStatus.base,}};

static void InitDefaultsAddRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sita::rtb::_AddRequest_default_instance_;
    new (ptr) ::sita::rtb::AddRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sita::rtb::AddRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddRequest}, {
      &protobuf_rtb_2eproto::scc_info_RequestCredentials.base,}};

static void InitDefaultsAddReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sita::rtb::_AddReply_default_instance_;
    new (ptr) ::sita::rtb::AddReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sita::rtb::AddReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddReply}, {
      &protobuf_rtb_2eproto::scc_info_ReplyStatus.base,}};

static void InitDefaultsDeleteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sita::rtb::_DeleteRequest_default_instance_;
    new (ptr) ::sita::rtb::DeleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sita::rtb::DeleteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeleteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeleteRequest}, {
      &protobuf_rtb_2eproto::scc_info_RequestCredentials.base,}};

static void InitDefaultsDeleteReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sita::rtb::_DeleteReply_default_instance_;
    new (ptr) ::sita::rtb::DeleteReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sita::rtb::DeleteReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeleteReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeleteReply}, {
      &protobuf_rtb_2eproto::scc_info_ReplyStatus.base,}};

static void InitDefaultsClearRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sita::rtb::_ClearRequest_default_instance_;
    new (ptr) ::sita::rtb::ClearRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sita::rtb::ClearRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClearRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClearRequest}, {
      &protobuf_rtb_2eproto::scc_info_RequestCredentials.base,}};

static void InitDefaultsClearReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sita::rtb::_ClearReply_default_instance_;
    new (ptr) ::sita::rtb::ClearReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sita::rtb::ClearReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClearReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClearReply}, {
      &protobuf_rtb_2eproto::scc_info_ReplyStatus.base,}};

static void InitDefaultsDisplayRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sita::rtb::_DisplayRequest_default_instance_;
    new (ptr) ::sita::rtb::DisplayRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sita::rtb::DisplayRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DisplayRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDisplayRequest}, {
      &protobuf_rtb_2eproto::scc_info_RequestCredentials.base,}};

static void InitDefaultsDisplayReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sita::rtb::_DisplayReply_default_instance_;
    new (ptr) ::sita::rtb::DisplayReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sita::rtb::DisplayReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DisplayReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDisplayReply}, {
      &protobuf_rtb_2eproto::scc_info_ReplyStatus.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RequestCredentials.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReplyStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HelpRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HelpReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClearRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClearReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisplayRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisplayReply.base);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::RequestCredentials, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::RequestCredentials, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::ReplyStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::ReplyStatus, successful_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::ReplyStatus, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::HelpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::HelpRequest, credentials_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::HelpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::HelpReply, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::HelpReply, help_text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::AddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::AddRequest, credentials_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::AddRequest, list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::AddRequest, option_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::AddRequest, addresses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::AddReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::AddReply, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::DeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::DeleteRequest, credentials_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::DeleteRequest, list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::DeleteRequest, addresses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::DeleteReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::DeleteReply, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::ClearRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::ClearRequest, credentials_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::ClearRequest, list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::ClearReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::ClearReply, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::DisplayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::DisplayRequest, credentials_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::DisplayRequest, list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::DisplayReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::DisplayReply, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sita::rtb::DisplayReply, contents_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sita::rtb::RequestCredentials)},
  { 6, -1, sizeof(::sita::rtb::ReplyStatus)},
  { 13, -1, sizeof(::sita::rtb::HelpRequest)},
  { 19, -1, sizeof(::sita::rtb::HelpReply)},
  { 26, -1, sizeof(::sita::rtb::AddRequest)},
  { 35, -1, sizeof(::sita::rtb::AddReply)},
  { 41, -1, sizeof(::sita::rtb::DeleteRequest)},
  { 49, -1, sizeof(::sita::rtb::DeleteReply)},
  { 55, -1, sizeof(::sita::rtb::ClearRequest)},
  { 62, -1, sizeof(::sita::rtb::ClearReply)},
  { 68, -1, sizeof(::sita::rtb::DisplayRequest)},
  { 75, -1, sizeof(::sita::rtb::DisplayReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sita::rtb::_RequestCredentials_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sita::rtb::_ReplyStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sita::rtb::_HelpRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sita::rtb::_HelpReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sita::rtb::_AddRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sita::rtb::_AddReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sita::rtb::_DeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sita::rtb::_DeleteReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sita::rtb::_ClearRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sita::rtb::_ClearReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sita::rtb::_DisplayRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sita::rtb::_DisplayReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "rtb.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\trtb.proto\022\010sita.rtb\"\"\n\022RequestCredenti"
      "als\022\014\n\004user\030\001 \001(\t\"2\n\013ReplyStatus\022\022\n\nsucc"
      "essful\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\"@\n\013HelpReq"
      "uest\0221\n\013credentials\030\001 \001(\0132\034.sita.rtb.Req"
      "uestCredentials\"E\n\tHelpReply\022%\n\006status\030\001"
      " \001(\0132\025.sita.rtb.ReplyStatus\022\021\n\thelp_text"
      "\030\002 \001(\t\"\266\001\n\nAddRequest\0221\n\013credentials\030\001 \001"
      "(\0132\034.sita.rtb.RequestCredentials\022\014\n\004list"
      "\030\002 \001(\t\022/\n\006option\030\003 \001(\0162\037.sita.rtb.AddReq"
      "uest.ListOption\022\021\n\taddresses\030\004 \003(\t\"#\n\nLi"
      "stOption\022\t\n\005MULTI\020\000\022\n\n\006SINGLE\020\001\"1\n\010AddRe"
      "ply\022%\n\006status\030\001 \001(\0132\025.sita.rtb.ReplyStat"
      "us\"c\n\rDeleteRequest\0221\n\013credentials\030\001 \001(\013"
      "2\034.sita.rtb.RequestCredentials\022\014\n\004list\030\002"
      " \001(\t\022\021\n\taddresses\030\003 \003(\t\"4\n\013DeleteReply\022%"
      "\n\006status\030\001 \001(\0132\025.sita.rtb.ReplyStatus\"O\n"
      "\014ClearRequest\0221\n\013credentials\030\001 \001(\0132\034.sit"
      "a.rtb.RequestCredentials\022\014\n\004list\030\002 \001(\t\"3"
      "\n\nClearReply\022%\n\006status\030\001 \001(\0132\025.sita.rtb."
      "ReplyStatus\"Q\n\016DisplayRequest\0221\n\013credent"
      "ials\030\001 \001(\0132\034.sita.rtb.RequestCredentials"
      "\022\014\n\004list\030\002 \001(\t\"G\n\014DisplayReply\022%\n\006status"
      "\030\001 \001(\0132\025.sita.rtb.ReplyStatus\022\020\n\010content"
      "s\030\002 \001(\t2\230\002\n\003RTB\0222\n\004Help\022\025.sita.rtb.HelpR"
      "equest\032\023.sita.rtb.HelpReply\022/\n\003Add\022\024.sit"
      "a.rtb.AddRequest\032\022.sita.rtb.AddReply\0228\n\006"
      "Delete\022\027.sita.rtb.DeleteRequest\032\025.sita.r"
      "tb.DeleteReply\0225\n\005Clear\022\026.sita.rtb.Clear"
      "Request\032\024.sita.rtb.ClearReply\022;\n\007Display"
      "\022\030.sita.rtb.DisplayRequest\032\026.sita.rtb.Di"
      "splayReplyb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1218);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rtb.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rtb_2eproto
namespace sita {
namespace rtb {
const ::google::protobuf::EnumDescriptor* AddRequest_ListOption_descriptor() {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rtb_2eproto::file_level_enum_descriptors[0];
}
bool AddRequest_ListOption_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AddRequest_ListOption AddRequest::MULTI;
const AddRequest_ListOption AddRequest::SINGLE;
const AddRequest_ListOption AddRequest::ListOption_MIN;
const AddRequest_ListOption AddRequest::ListOption_MAX;
const int AddRequest::ListOption_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void RequestCredentials::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestCredentials::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestCredentials::RequestCredentials()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtb_2eproto::scc_info_RequestCredentials.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sita.rtb.RequestCredentials)
}
RequestCredentials::RequestCredentials(const RequestCredentials& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user().size() > 0) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  // @@protoc_insertion_point(copy_constructor:sita.rtb.RequestCredentials)
}

void RequestCredentials::SharedCtor() {
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RequestCredentials::~RequestCredentials() {
  // @@protoc_insertion_point(destructor:sita.rtb.RequestCredentials)
  SharedDtor();
}

void RequestCredentials::SharedDtor() {
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestCredentials::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RequestCredentials::descriptor() {
  ::protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestCredentials& RequestCredentials::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtb_2eproto::scc_info_RequestCredentials.base);
  return *internal_default_instance();
}


void RequestCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:sita.rtb.RequestCredentials)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RequestCredentials::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sita.rtb.RequestCredentials)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sita.rtb.RequestCredentials.user"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sita.rtb.RequestCredentials)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sita.rtb.RequestCredentials)
  return false;
#undef DO_
}

void RequestCredentials::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sita.rtb.RequestCredentials)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.RequestCredentials.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sita.rtb.RequestCredentials)
}

::google::protobuf::uint8* RequestCredentials::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sita.rtb.RequestCredentials)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.RequestCredentials.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sita.rtb.RequestCredentials)
  return target;
}

size_t RequestCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sita.rtb.RequestCredentials)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user = 1;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestCredentials::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sita.rtb.RequestCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestCredentials* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestCredentials>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sita.rtb.RequestCredentials)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sita.rtb.RequestCredentials)
    MergeFrom(*source);
  }
}

void RequestCredentials::MergeFrom(const RequestCredentials& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sita.rtb.RequestCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
}

void RequestCredentials::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sita.rtb.RequestCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestCredentials::CopyFrom(const RequestCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sita.rtb.RequestCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestCredentials::IsInitialized() const {
  return true;
}

void RequestCredentials::Swap(RequestCredentials* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestCredentials::InternalSwap(RequestCredentials* other) {
  using std::swap;
  user_.Swap(&other->user_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RequestCredentials::GetMetadata() const {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReplyStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplyStatus::kSuccessfulFieldNumber;
const int ReplyStatus::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplyStatus::ReplyStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtb_2eproto::scc_info_ReplyStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sita.rtb.ReplyStatus)
}
ReplyStatus::ReplyStatus(const ReplyStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  successful_ = from.successful_;
  // @@protoc_insertion_point(copy_constructor:sita.rtb.ReplyStatus)
}

void ReplyStatus::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  successful_ = false;
}

ReplyStatus::~ReplyStatus() {
  // @@protoc_insertion_point(destructor:sita.rtb.ReplyStatus)
  SharedDtor();
}

void ReplyStatus::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReplyStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReplyStatus::descriptor() {
  ::protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReplyStatus& ReplyStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtb_2eproto::scc_info_ReplyStatus.base);
  return *internal_default_instance();
}


void ReplyStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sita.rtb.ReplyStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  successful_ = false;
  _internal_metadata_.Clear();
}

bool ReplyStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sita.rtb.ReplyStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool successful = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &successful_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sita.rtb.ReplyStatus.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sita.rtb.ReplyStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sita.rtb.ReplyStatus)
  return false;
#undef DO_
}

void ReplyStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sita.rtb.ReplyStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool successful = 1;
  if (this->successful() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->successful(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.ReplyStatus.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sita.rtb.ReplyStatus)
}

::google::protobuf::uint8* ReplyStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sita.rtb.ReplyStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool successful = 1;
  if (this->successful() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->successful(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.ReplyStatus.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sita.rtb.ReplyStatus)
  return target;
}

size_t ReplyStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sita.rtb.ReplyStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool successful = 1;
  if (this->successful() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplyStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sita.rtb.ReplyStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplyStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplyStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sita.rtb.ReplyStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sita.rtb.ReplyStatus)
    MergeFrom(*source);
  }
}

void ReplyStatus::MergeFrom(const ReplyStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sita.rtb.ReplyStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.successful() != 0) {
    set_successful(from.successful());
  }
}

void ReplyStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sita.rtb.ReplyStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyStatus::CopyFrom(const ReplyStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sita.rtb.ReplyStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyStatus::IsInitialized() const {
  return true;
}

void ReplyStatus::Swap(ReplyStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplyStatus::InternalSwap(ReplyStatus* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(successful_, other->successful_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReplyStatus::GetMetadata() const {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HelpRequest::InitAsDefaultInstance() {
  ::sita::rtb::_HelpRequest_default_instance_._instance.get_mutable()->credentials_ = const_cast< ::sita::rtb::RequestCredentials*>(
      ::sita::rtb::RequestCredentials::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelpRequest::kCredentialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelpRequest::HelpRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtb_2eproto::scc_info_HelpRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sita.rtb.HelpRequest)
}
HelpRequest::HelpRequest(const HelpRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_credentials()) {
    credentials_ = new ::sita::rtb::RequestCredentials(*from.credentials_);
  } else {
    credentials_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sita.rtb.HelpRequest)
}

void HelpRequest::SharedCtor() {
  credentials_ = NULL;
}

HelpRequest::~HelpRequest() {
  // @@protoc_insertion_point(destructor:sita.rtb.HelpRequest)
  SharedDtor();
}

void HelpRequest::SharedDtor() {
  if (this != internal_default_instance()) delete credentials_;
}

void HelpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HelpRequest::descriptor() {
  ::protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HelpRequest& HelpRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtb_2eproto::scc_info_HelpRequest.base);
  return *internal_default_instance();
}


void HelpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sita.rtb.HelpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && credentials_ != NULL) {
    delete credentials_;
  }
  credentials_ = NULL;
  _internal_metadata_.Clear();
}

bool HelpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sita.rtb.HelpRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sita.rtb.RequestCredentials credentials = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_credentials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sita.rtb.HelpRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sita.rtb.HelpRequest)
  return false;
#undef DO_
}

void HelpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sita.rtb.HelpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_credentials(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sita.rtb.HelpRequest)
}

::google::protobuf::uint8* HelpRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sita.rtb.HelpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_credentials(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sita.rtb.HelpRequest)
  return target;
}

size_t HelpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sita.rtb.HelpRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *credentials_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelpRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sita.rtb.HelpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HelpRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelpRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sita.rtb.HelpRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sita.rtb.HelpRequest)
    MergeFrom(*source);
  }
}

void HelpRequest::MergeFrom(const HelpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sita.rtb.HelpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_credentials()) {
    mutable_credentials()->::sita::rtb::RequestCredentials::MergeFrom(from.credentials());
  }
}

void HelpRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sita.rtb.HelpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelpRequest::CopyFrom(const HelpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sita.rtb.HelpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelpRequest::IsInitialized() const {
  return true;
}

void HelpRequest::Swap(HelpRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelpRequest::InternalSwap(HelpRequest* other) {
  using std::swap;
  swap(credentials_, other->credentials_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HelpRequest::GetMetadata() const {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HelpReply::InitAsDefaultInstance() {
  ::sita::rtb::_HelpReply_default_instance_._instance.get_mutable()->status_ = const_cast< ::sita::rtb::ReplyStatus*>(
      ::sita::rtb::ReplyStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelpReply::kStatusFieldNumber;
const int HelpReply::kHelpTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelpReply::HelpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtb_2eproto::scc_info_HelpReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sita.rtb.HelpReply)
}
HelpReply::HelpReply(const HelpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  help_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.help_text().size() > 0) {
    help_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.help_text_);
  }
  if (from.has_status()) {
    status_ = new ::sita::rtb::ReplyStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sita.rtb.HelpReply)
}

void HelpReply::SharedCtor() {
  help_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = NULL;
}

HelpReply::~HelpReply() {
  // @@protoc_insertion_point(destructor:sita.rtb.HelpReply)
  SharedDtor();
}

void HelpReply::SharedDtor() {
  help_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void HelpReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HelpReply::descriptor() {
  ::protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HelpReply& HelpReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtb_2eproto::scc_info_HelpReply.base);
  return *internal_default_instance();
}


void HelpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sita.rtb.HelpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  help_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool HelpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sita.rtb.HelpReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sita.rtb.ReplyStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string help_text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_help_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->help_text().data(), static_cast<int>(this->help_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sita.rtb.HelpReply.help_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sita.rtb.HelpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sita.rtb.HelpReply)
  return false;
#undef DO_
}

void HelpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sita.rtb.HelpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  // string help_text = 2;
  if (this->help_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->help_text().data(), static_cast<int>(this->help_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.HelpReply.help_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->help_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sita.rtb.HelpReply)
}

::google::protobuf::uint8* HelpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sita.rtb.HelpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  // string help_text = 2;
  if (this->help_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->help_text().data(), static_cast<int>(this->help_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.HelpReply.help_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->help_text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sita.rtb.HelpReply)
  return target;
}

size_t HelpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sita.rtb.HelpReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string help_text = 2;
  if (this->help_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->help_text());
  }

  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sita.rtb.HelpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const HelpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sita.rtb.HelpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sita.rtb.HelpReply)
    MergeFrom(*source);
  }
}

void HelpReply::MergeFrom(const HelpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sita.rtb.HelpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.help_text().size() > 0) {

    help_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.help_text_);
  }
  if (from.has_status()) {
    mutable_status()->::sita::rtb::ReplyStatus::MergeFrom(from.status());
  }
}

void HelpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sita.rtb.HelpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelpReply::CopyFrom(const HelpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sita.rtb.HelpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelpReply::IsInitialized() const {
  return true;
}

void HelpReply::Swap(HelpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelpReply::InternalSwap(HelpReply* other) {
  using std::swap;
  help_text_.Swap(&other->help_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HelpReply::GetMetadata() const {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddRequest::InitAsDefaultInstance() {
  ::sita::rtb::_AddRequest_default_instance_._instance.get_mutable()->credentials_ = const_cast< ::sita::rtb::RequestCredentials*>(
      ::sita::rtb::RequestCredentials::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddRequest::kCredentialsFieldNumber;
const int AddRequest::kListFieldNumber;
const int AddRequest::kOptionFieldNumber;
const int AddRequest::kAddressesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddRequest::AddRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtb_2eproto::scc_info_AddRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sita.rtb.AddRequest)
}
AddRequest::AddRequest(const AddRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.list().size() > 0) {
    list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.list_);
  }
  if (from.has_credentials()) {
    credentials_ = new ::sita::rtb::RequestCredentials(*from.credentials_);
  } else {
    credentials_ = NULL;
  }
  option_ = from.option_;
  // @@protoc_insertion_point(copy_constructor:sita.rtb.AddRequest)
}

void AddRequest::SharedCtor() {
  list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&credentials_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&option_) -
      reinterpret_cast<char*>(&credentials_)) + sizeof(option_));
}

AddRequest::~AddRequest() {
  // @@protoc_insertion_point(destructor:sita.rtb.AddRequest)
  SharedDtor();
}

void AddRequest::SharedDtor() {
  list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete credentials_;
}

void AddRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddRequest::descriptor() {
  ::protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddRequest& AddRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtb_2eproto::scc_info_AddRequest.base);
  return *internal_default_instance();
}


void AddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sita.rtb.AddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && credentials_ != NULL) {
    delete credentials_;
  }
  credentials_ = NULL;
  option_ = 0;
  _internal_metadata_.Clear();
}

bool AddRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sita.rtb.AddRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sita.rtb.RequestCredentials credentials = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_credentials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->list().data(), static_cast<int>(this->list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sita.rtb.AddRequest.list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sita.rtb.AddRequest.ListOption option = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_option(static_cast< ::sita::rtb::AddRequest_ListOption >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string addresses = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_addresses()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addresses(this->addresses_size() - 1).data(),
            static_cast<int>(this->addresses(this->addresses_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sita.rtb.AddRequest.addresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sita.rtb.AddRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sita.rtb.AddRequest)
  return false;
#undef DO_
}

void AddRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sita.rtb.AddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_credentials(), output);
  }

  // string list = 2;
  if (this->list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list().data(), static_cast<int>(this->list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.AddRequest.list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->list(), output);
  }

  // .sita.rtb.AddRequest.ListOption option = 3;
  if (this->option() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->option(), output);
  }

  // repeated string addresses = 4;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.AddRequest.addresses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->addresses(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sita.rtb.AddRequest)
}

::google::protobuf::uint8* AddRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sita.rtb.AddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_credentials(), deterministic, target);
  }

  // string list = 2;
  if (this->list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list().data(), static_cast<int>(this->list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.AddRequest.list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->list(), target);
  }

  // .sita.rtb.AddRequest.ListOption option = 3;
  if (this->option() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->option(), target);
  }

  // repeated string addresses = 4;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.AddRequest.addresses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->addresses(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sita.rtb.AddRequest)
  return target;
}

size_t AddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sita.rtb.AddRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string addresses = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->addresses_size());
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->addresses(i));
  }

  // string list = 2;
  if (this->list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->list());
  }

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *credentials_);
  }

  // .sita.rtb.AddRequest.ListOption option = 3;
  if (this->option() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->option());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sita.rtb.AddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sita.rtb.AddRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sita.rtb.AddRequest)
    MergeFrom(*source);
  }
}

void AddRequest::MergeFrom(const AddRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sita.rtb.AddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  if (from.list().size() > 0) {

    list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.list_);
  }
  if (from.has_credentials()) {
    mutable_credentials()->::sita::rtb::RequestCredentials::MergeFrom(from.credentials());
  }
  if (from.option() != 0) {
    set_option(from.option());
  }
}

void AddRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sita.rtb.AddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRequest::CopyFrom(const AddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sita.rtb.AddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRequest::IsInitialized() const {
  return true;
}

void AddRequest::Swap(AddRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddRequest::InternalSwap(AddRequest* other) {
  using std::swap;
  addresses_.InternalSwap(CastToBase(&other->addresses_));
  list_.Swap(&other->list_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(credentials_, other->credentials_);
  swap(option_, other->option_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddRequest::GetMetadata() const {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddReply::InitAsDefaultInstance() {
  ::sita::rtb::_AddReply_default_instance_._instance.get_mutable()->status_ = const_cast< ::sita::rtb::ReplyStatus*>(
      ::sita::rtb::ReplyStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddReply::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddReply::AddReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtb_2eproto::scc_info_AddReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sita.rtb.AddReply)
}
AddReply::AddReply(const AddReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::sita::rtb::ReplyStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sita.rtb.AddReply)
}

void AddReply::SharedCtor() {
  status_ = NULL;
}

AddReply::~AddReply() {
  // @@protoc_insertion_point(destructor:sita.rtb.AddReply)
  SharedDtor();
}

void AddReply::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void AddReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddReply::descriptor() {
  ::protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddReply& AddReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtb_2eproto::scc_info_AddReply.base);
  return *internal_default_instance();
}


void AddReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sita.rtb.AddReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool AddReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sita.rtb.AddReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sita.rtb.ReplyStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sita.rtb.AddReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sita.rtb.AddReply)
  return false;
#undef DO_
}

void AddReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sita.rtb.AddReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sita.rtb.AddReply)
}

::google::protobuf::uint8* AddReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sita.rtb.AddReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sita.rtb.AddReply)
  return target;
}

size_t AddReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sita.rtb.AddReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sita.rtb.AddReply)
  GOOGLE_DCHECK_NE(&from, this);
  const AddReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sita.rtb.AddReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sita.rtb.AddReply)
    MergeFrom(*source);
  }
}

void AddReply::MergeFrom(const AddReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sita.rtb.AddReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::sita::rtb::ReplyStatus::MergeFrom(from.status());
  }
}

void AddReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sita.rtb.AddReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddReply::CopyFrom(const AddReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sita.rtb.AddReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddReply::IsInitialized() const {
  return true;
}

void AddReply::Swap(AddReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddReply::InternalSwap(AddReply* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddReply::GetMetadata() const {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteRequest::InitAsDefaultInstance() {
  ::sita::rtb::_DeleteRequest_default_instance_._instance.get_mutable()->credentials_ = const_cast< ::sita::rtb::RequestCredentials*>(
      ::sita::rtb::RequestCredentials::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRequest::kCredentialsFieldNumber;
const int DeleteRequest::kListFieldNumber;
const int DeleteRequest::kAddressesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRequest::DeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtb_2eproto::scc_info_DeleteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sita.rtb.DeleteRequest)
}
DeleteRequest::DeleteRequest(const DeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.list().size() > 0) {
    list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.list_);
  }
  if (from.has_credentials()) {
    credentials_ = new ::sita::rtb::RequestCredentials(*from.credentials_);
  } else {
    credentials_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sita.rtb.DeleteRequest)
}

void DeleteRequest::SharedCtor() {
  list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  credentials_ = NULL;
}

DeleteRequest::~DeleteRequest() {
  // @@protoc_insertion_point(destructor:sita.rtb.DeleteRequest)
  SharedDtor();
}

void DeleteRequest::SharedDtor() {
  list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete credentials_;
}

void DeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteRequest::descriptor() {
  ::protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteRequest& DeleteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtb_2eproto::scc_info_DeleteRequest.base);
  return *internal_default_instance();
}


void DeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sita.rtb.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && credentials_ != NULL) {
    delete credentials_;
  }
  credentials_ = NULL;
  _internal_metadata_.Clear();
}

bool DeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sita.rtb.DeleteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sita.rtb.RequestCredentials credentials = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_credentials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->list().data(), static_cast<int>(this->list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sita.rtb.DeleteRequest.list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string addresses = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_addresses()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addresses(this->addresses_size() - 1).data(),
            static_cast<int>(this->addresses(this->addresses_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sita.rtb.DeleteRequest.addresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sita.rtb.DeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sita.rtb.DeleteRequest)
  return false;
#undef DO_
}

void DeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sita.rtb.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_credentials(), output);
  }

  // string list = 2;
  if (this->list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list().data(), static_cast<int>(this->list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.DeleteRequest.list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->list(), output);
  }

  // repeated string addresses = 3;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.DeleteRequest.addresses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->addresses(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sita.rtb.DeleteRequest)
}

::google::protobuf::uint8* DeleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sita.rtb.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_credentials(), deterministic, target);
  }

  // string list = 2;
  if (this->list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list().data(), static_cast<int>(this->list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.DeleteRequest.list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->list(), target);
  }

  // repeated string addresses = 3;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.DeleteRequest.addresses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->addresses(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sita.rtb.DeleteRequest)
  return target;
}

size_t DeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sita.rtb.DeleteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string addresses = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->addresses_size());
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->addresses(i));
  }

  // string list = 2;
  if (this->list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->list());
  }

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *credentials_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sita.rtb.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sita.rtb.DeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sita.rtb.DeleteRequest)
    MergeFrom(*source);
  }
}

void DeleteRequest::MergeFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sita.rtb.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  if (from.list().size() > 0) {

    list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.list_);
  }
  if (from.has_credentials()) {
    mutable_credentials()->::sita::rtb::RequestCredentials::MergeFrom(from.credentials());
  }
}

void DeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sita.rtb.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRequest::CopyFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sita.rtb.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRequest::IsInitialized() const {
  return true;
}

void DeleteRequest::Swap(DeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRequest::InternalSwap(DeleteRequest* other) {
  using std::swap;
  addresses_.InternalSwap(CastToBase(&other->addresses_));
  list_.Swap(&other->list_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(credentials_, other->credentials_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteRequest::GetMetadata() const {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteReply::InitAsDefaultInstance() {
  ::sita::rtb::_DeleteReply_default_instance_._instance.get_mutable()->status_ = const_cast< ::sita::rtb::ReplyStatus*>(
      ::sita::rtb::ReplyStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteReply::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteReply::DeleteReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtb_2eproto::scc_info_DeleteReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sita.rtb.DeleteReply)
}
DeleteReply::DeleteReply(const DeleteReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::sita::rtb::ReplyStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sita.rtb.DeleteReply)
}

void DeleteReply::SharedCtor() {
  status_ = NULL;
}

DeleteReply::~DeleteReply() {
  // @@protoc_insertion_point(destructor:sita.rtb.DeleteReply)
  SharedDtor();
}

void DeleteReply::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void DeleteReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteReply::descriptor() {
  ::protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteReply& DeleteReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtb_2eproto::scc_info_DeleteReply.base);
  return *internal_default_instance();
}


void DeleteReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sita.rtb.DeleteReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool DeleteReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sita.rtb.DeleteReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sita.rtb.ReplyStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sita.rtb.DeleteReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sita.rtb.DeleteReply)
  return false;
#undef DO_
}

void DeleteReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sita.rtb.DeleteReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sita.rtb.DeleteReply)
}

::google::protobuf::uint8* DeleteReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sita.rtb.DeleteReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sita.rtb.DeleteReply)
  return target;
}

size_t DeleteReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sita.rtb.DeleteReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sita.rtb.DeleteReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sita.rtb.DeleteReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sita.rtb.DeleteReply)
    MergeFrom(*source);
  }
}

void DeleteReply::MergeFrom(const DeleteReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sita.rtb.DeleteReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::sita::rtb::ReplyStatus::MergeFrom(from.status());
  }
}

void DeleteReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sita.rtb.DeleteReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteReply::CopyFrom(const DeleteReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sita.rtb.DeleteReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteReply::IsInitialized() const {
  return true;
}

void DeleteReply::Swap(DeleteReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteReply::InternalSwap(DeleteReply* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteReply::GetMetadata() const {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClearRequest::InitAsDefaultInstance() {
  ::sita::rtb::_ClearRequest_default_instance_._instance.get_mutable()->credentials_ = const_cast< ::sita::rtb::RequestCredentials*>(
      ::sita::rtb::RequestCredentials::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClearRequest::kCredentialsFieldNumber;
const int ClearRequest::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearRequest::ClearRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtb_2eproto::scc_info_ClearRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sita.rtb.ClearRequest)
}
ClearRequest::ClearRequest(const ClearRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.list().size() > 0) {
    list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.list_);
  }
  if (from.has_credentials()) {
    credentials_ = new ::sita::rtb::RequestCredentials(*from.credentials_);
  } else {
    credentials_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sita.rtb.ClearRequest)
}

void ClearRequest::SharedCtor() {
  list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  credentials_ = NULL;
}

ClearRequest::~ClearRequest() {
  // @@protoc_insertion_point(destructor:sita.rtb.ClearRequest)
  SharedDtor();
}

void ClearRequest::SharedDtor() {
  list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete credentials_;
}

void ClearRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClearRequest::descriptor() {
  ::protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClearRequest& ClearRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtb_2eproto::scc_info_ClearRequest.base);
  return *internal_default_instance();
}


void ClearRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sita.rtb.ClearRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && credentials_ != NULL) {
    delete credentials_;
  }
  credentials_ = NULL;
  _internal_metadata_.Clear();
}

bool ClearRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sita.rtb.ClearRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sita.rtb.RequestCredentials credentials = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_credentials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->list().data(), static_cast<int>(this->list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sita.rtb.ClearRequest.list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sita.rtb.ClearRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sita.rtb.ClearRequest)
  return false;
#undef DO_
}

void ClearRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sita.rtb.ClearRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_credentials(), output);
  }

  // string list = 2;
  if (this->list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list().data(), static_cast<int>(this->list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.ClearRequest.list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->list(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sita.rtb.ClearRequest)
}

::google::protobuf::uint8* ClearRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sita.rtb.ClearRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_credentials(), deterministic, target);
  }

  // string list = 2;
  if (this->list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list().data(), static_cast<int>(this->list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.ClearRequest.list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->list(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sita.rtb.ClearRequest)
  return target;
}

size_t ClearRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sita.rtb.ClearRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string list = 2;
  if (this->list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->list());
  }

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *credentials_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sita.rtb.ClearRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClearRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sita.rtb.ClearRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sita.rtb.ClearRequest)
    MergeFrom(*source);
  }
}

void ClearRequest::MergeFrom(const ClearRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sita.rtb.ClearRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.list().size() > 0) {

    list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.list_);
  }
  if (from.has_credentials()) {
    mutable_credentials()->::sita::rtb::RequestCredentials::MergeFrom(from.credentials());
  }
}

void ClearRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sita.rtb.ClearRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearRequest::CopyFrom(const ClearRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sita.rtb.ClearRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearRequest::IsInitialized() const {
  return true;
}

void ClearRequest::Swap(ClearRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearRequest::InternalSwap(ClearRequest* other) {
  using std::swap;
  list_.Swap(&other->list_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(credentials_, other->credentials_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClearRequest::GetMetadata() const {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClearReply::InitAsDefaultInstance() {
  ::sita::rtb::_ClearReply_default_instance_._instance.get_mutable()->status_ = const_cast< ::sita::rtb::ReplyStatus*>(
      ::sita::rtb::ReplyStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClearReply::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearReply::ClearReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtb_2eproto::scc_info_ClearReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sita.rtb.ClearReply)
}
ClearReply::ClearReply(const ClearReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::sita::rtb::ReplyStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sita.rtb.ClearReply)
}

void ClearReply::SharedCtor() {
  status_ = NULL;
}

ClearReply::~ClearReply() {
  // @@protoc_insertion_point(destructor:sita.rtb.ClearReply)
  SharedDtor();
}

void ClearReply::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void ClearReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClearReply::descriptor() {
  ::protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClearReply& ClearReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtb_2eproto::scc_info_ClearReply.base);
  return *internal_default_instance();
}


void ClearReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sita.rtb.ClearReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool ClearReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sita.rtb.ClearReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sita.rtb.ReplyStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sita.rtb.ClearReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sita.rtb.ClearReply)
  return false;
#undef DO_
}

void ClearReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sita.rtb.ClearReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sita.rtb.ClearReply)
}

::google::protobuf::uint8* ClearReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sita.rtb.ClearReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sita.rtb.ClearReply)
  return target;
}

size_t ClearReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sita.rtb.ClearReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sita.rtb.ClearReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClearReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sita.rtb.ClearReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sita.rtb.ClearReply)
    MergeFrom(*source);
  }
}

void ClearReply::MergeFrom(const ClearReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sita.rtb.ClearReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::sita::rtb::ReplyStatus::MergeFrom(from.status());
  }
}

void ClearReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sita.rtb.ClearReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearReply::CopyFrom(const ClearReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sita.rtb.ClearReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearReply::IsInitialized() const {
  return true;
}

void ClearReply::Swap(ClearReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearReply::InternalSwap(ClearReply* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClearReply::GetMetadata() const {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisplayRequest::InitAsDefaultInstance() {
  ::sita::rtb::_DisplayRequest_default_instance_._instance.get_mutable()->credentials_ = const_cast< ::sita::rtb::RequestCredentials*>(
      ::sita::rtb::RequestCredentials::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisplayRequest::kCredentialsFieldNumber;
const int DisplayRequest::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisplayRequest::DisplayRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtb_2eproto::scc_info_DisplayRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sita.rtb.DisplayRequest)
}
DisplayRequest::DisplayRequest(const DisplayRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.list().size() > 0) {
    list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.list_);
  }
  if (from.has_credentials()) {
    credentials_ = new ::sita::rtb::RequestCredentials(*from.credentials_);
  } else {
    credentials_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sita.rtb.DisplayRequest)
}

void DisplayRequest::SharedCtor() {
  list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  credentials_ = NULL;
}

DisplayRequest::~DisplayRequest() {
  // @@protoc_insertion_point(destructor:sita.rtb.DisplayRequest)
  SharedDtor();
}

void DisplayRequest::SharedDtor() {
  list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete credentials_;
}

void DisplayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DisplayRequest::descriptor() {
  ::protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisplayRequest& DisplayRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtb_2eproto::scc_info_DisplayRequest.base);
  return *internal_default_instance();
}


void DisplayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sita.rtb.DisplayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && credentials_ != NULL) {
    delete credentials_;
  }
  credentials_ = NULL;
  _internal_metadata_.Clear();
}

bool DisplayRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sita.rtb.DisplayRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sita.rtb.RequestCredentials credentials = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_credentials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->list().data(), static_cast<int>(this->list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sita.rtb.DisplayRequest.list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sita.rtb.DisplayRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sita.rtb.DisplayRequest)
  return false;
#undef DO_
}

void DisplayRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sita.rtb.DisplayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_credentials(), output);
  }

  // string list = 2;
  if (this->list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list().data(), static_cast<int>(this->list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.DisplayRequest.list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->list(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sita.rtb.DisplayRequest)
}

::google::protobuf::uint8* DisplayRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sita.rtb.DisplayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_credentials(), deterministic, target);
  }

  // string list = 2;
  if (this->list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list().data(), static_cast<int>(this->list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.DisplayRequest.list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->list(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sita.rtb.DisplayRequest)
  return target;
}

size_t DisplayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sita.rtb.DisplayRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string list = 2;
  if (this->list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->list());
  }

  // .sita.rtb.RequestCredentials credentials = 1;
  if (this->has_credentials()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *credentials_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisplayRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sita.rtb.DisplayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisplayRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sita.rtb.DisplayRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sita.rtb.DisplayRequest)
    MergeFrom(*source);
  }
}

void DisplayRequest::MergeFrom(const DisplayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sita.rtb.DisplayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.list().size() > 0) {

    list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.list_);
  }
  if (from.has_credentials()) {
    mutable_credentials()->::sita::rtb::RequestCredentials::MergeFrom(from.credentials());
  }
}

void DisplayRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sita.rtb.DisplayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayRequest::CopyFrom(const DisplayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sita.rtb.DisplayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayRequest::IsInitialized() const {
  return true;
}

void DisplayRequest::Swap(DisplayRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisplayRequest::InternalSwap(DisplayRequest* other) {
  using std::swap;
  list_.Swap(&other->list_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(credentials_, other->credentials_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DisplayRequest::GetMetadata() const {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisplayReply::InitAsDefaultInstance() {
  ::sita::rtb::_DisplayReply_default_instance_._instance.get_mutable()->status_ = const_cast< ::sita::rtb::ReplyStatus*>(
      ::sita::rtb::ReplyStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisplayReply::kStatusFieldNumber;
const int DisplayReply::kContentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisplayReply::DisplayReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtb_2eproto::scc_info_DisplayReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sita.rtb.DisplayReply)
}
DisplayReply::DisplayReply(const DisplayReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  contents_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contents().size() > 0) {
    contents_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contents_);
  }
  if (from.has_status()) {
    status_ = new ::sita::rtb::ReplyStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sita.rtb.DisplayReply)
}

void DisplayReply::SharedCtor() {
  contents_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = NULL;
}

DisplayReply::~DisplayReply() {
  // @@protoc_insertion_point(destructor:sita.rtb.DisplayReply)
  SharedDtor();
}

void DisplayReply::SharedDtor() {
  contents_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void DisplayReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DisplayReply::descriptor() {
  ::protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisplayReply& DisplayReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtb_2eproto::scc_info_DisplayReply.base);
  return *internal_default_instance();
}


void DisplayReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sita.rtb.DisplayReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool DisplayReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sita.rtb.DisplayReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sita.rtb.ReplyStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contents = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contents()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contents().data(), static_cast<int>(this->contents().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sita.rtb.DisplayReply.contents"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sita.rtb.DisplayReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sita.rtb.DisplayReply)
  return false;
#undef DO_
}

void DisplayReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sita.rtb.DisplayReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  // string contents = 2;
  if (this->contents().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contents().data(), static_cast<int>(this->contents().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.DisplayReply.contents");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contents(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sita.rtb.DisplayReply)
}

::google::protobuf::uint8* DisplayReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sita.rtb.DisplayReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  // string contents = 2;
  if (this->contents().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contents().data(), static_cast<int>(this->contents().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sita.rtb.DisplayReply.contents");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contents(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sita.rtb.DisplayReply)
  return target;
}

size_t DisplayReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sita.rtb.DisplayReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string contents = 2;
  if (this->contents().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contents());
  }

  // .sita.rtb.ReplyStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisplayReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sita.rtb.DisplayReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisplayReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sita.rtb.DisplayReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sita.rtb.DisplayReply)
    MergeFrom(*source);
  }
}

void DisplayReply::MergeFrom(const DisplayReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sita.rtb.DisplayReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.contents().size() > 0) {

    contents_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contents_);
  }
  if (from.has_status()) {
    mutable_status()->::sita::rtb::ReplyStatus::MergeFrom(from.status());
  }
}

void DisplayReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sita.rtb.DisplayReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayReply::CopyFrom(const DisplayReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sita.rtb.DisplayReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayReply::IsInitialized() const {
  return true;
}

void DisplayReply::Swap(DisplayReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisplayReply::InternalSwap(DisplayReply* other) {
  using std::swap;
  contents_.Swap(&other->contents_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DisplayReply::GetMetadata() const {
  protobuf_rtb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rtb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rtb
}  // namespace sita
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sita::rtb::RequestCredentials* Arena::CreateMaybeMessage< ::sita::rtb::RequestCredentials >(Arena* arena) {
  return Arena::CreateInternal< ::sita::rtb::RequestCredentials >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sita::rtb::ReplyStatus* Arena::CreateMaybeMessage< ::sita::rtb::ReplyStatus >(Arena* arena) {
  return Arena::CreateInternal< ::sita::rtb::ReplyStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sita::rtb::HelpRequest* Arena::CreateMaybeMessage< ::sita::rtb::HelpRequest >(Arena* arena) {
  return Arena::CreateInternal< ::sita::rtb::HelpRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sita::rtb::HelpReply* Arena::CreateMaybeMessage< ::sita::rtb::HelpReply >(Arena* arena) {
  return Arena::CreateInternal< ::sita::rtb::HelpReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sita::rtb::AddRequest* Arena::CreateMaybeMessage< ::sita::rtb::AddRequest >(Arena* arena) {
  return Arena::CreateInternal< ::sita::rtb::AddRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sita::rtb::AddReply* Arena::CreateMaybeMessage< ::sita::rtb::AddReply >(Arena* arena) {
  return Arena::CreateInternal< ::sita::rtb::AddReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sita::rtb::DeleteRequest* Arena::CreateMaybeMessage< ::sita::rtb::DeleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::sita::rtb::DeleteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sita::rtb::DeleteReply* Arena::CreateMaybeMessage< ::sita::rtb::DeleteReply >(Arena* arena) {
  return Arena::CreateInternal< ::sita::rtb::DeleteReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sita::rtb::ClearRequest* Arena::CreateMaybeMessage< ::sita::rtb::ClearRequest >(Arena* arena) {
  return Arena::CreateInternal< ::sita::rtb::ClearRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sita::rtb::ClearReply* Arena::CreateMaybeMessage< ::sita::rtb::ClearReply >(Arena* arena) {
  return Arena::CreateInternal< ::sita::rtb::ClearReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sita::rtb::DisplayRequest* Arena::CreateMaybeMessage< ::sita::rtb::DisplayRequest >(Arena* arena) {
  return Arena::CreateInternal< ::sita::rtb::DisplayRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sita::rtb::DisplayReply* Arena::CreateMaybeMessage< ::sita::rtb::DisplayReply >(Arena* arena) {
  return Arena::CreateInternal< ::sita::rtb::DisplayReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
